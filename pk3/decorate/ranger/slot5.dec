actor "  Rocket Launcher  ": InstantSwitchWeapon
{
    //Weapon.BobRangeX 0
    //Weapon.BobRangeY 0.5
    //Weapon.BobSpeed 1.1
    //Weapon.BobStyle Alpha
    Weapon.SelectionOrder 2
    
    Weapon.AmmoUse 1
    Weapon.AmmoGive 10
    Weapon.AmmoType "RocketAmmo"
    
    Weapon.AmmoUse2 1
    Weapon.AmmoGive2 0
    Weapon.AmmoType2 "MultiRocketAmmo"

    Weapon.SisterWeapon "Spectral RL"
    
    +NOAUTOFIRE
    +UNDROPPABLE
    +AMMO_OPTIONAL
    +ALT_AMMO_OPTIONAL
    +NOALERT
    
    Inventory.Icon "QRKLZ0"
    
    Inventory.PickupSound "quakeweps/weaponpickup"
    Inventory.PickupMessage "You got the rocket launcher"
    
    States
    {
      Deselect:
        QRKL A 0 A_TakeInventory("UsingMultiRockets")
        QRKL A 0 A_TakeInventory("UsingDoEAmmo")
        goto Super::Deselect

      // Jump line's repeated twice because on the first tic, all inventory
      // jump checks break

      Ready:
        TNT1 A 0 A_JumpIfInventory("UsingMultiRockets",1,"MultiReady")
        QRKL A 1 A_WeaponReady
        TNT1 A 0 A_JumpIfInventory("UsingMultiRockets",1,"MultiReady")
        TNT1 A 0 A_TakeInventory("UsingMultiRockets",1)
        TNT1 A 0 A_TakeInventory("UsingDoEAmmo",1)
        Loop
        
      MultiReady:
        QMRL A 1 A_WeaponReady
        TNT1 A 0 A_GiveInventory("UsingMultiRockets",1)
        TNT1 A 0 A_GiveInventory("UsingDoEAmmo",1)
        Loop
        
      Fire:
        TNT1 A 0 A_JumpIfInventory("UsingMultiRockets",1,"MultiFire")
        TNT1 A 0 A_JumpIfNoAmmo("DeselectShit")
        TNT1 A 0 ACS_ExecuteAlways(312, 0, 5, 4, 15)
        TNT1 A 0 A_JumpIfInventory("QuakeInvisTimer", 1, 2)
        TNT1 A 0 A_AlertMonsters
        QRKL B 0 A_PlaySound("quakeweps/rlfire", CHAN_WEAPON)
        TNT1 A 0 A_JumpIfInventory("QuadDamagePower", 1, "QuadFire")
        goto AfterSound
        
      QuadFire:
        TNT1 A 0 A_JumpIfInventory("CoopModeOn", 1, "CoopQuad")
        TNT1 A 0 A_JumpIfInventory("SPModeOn", 1, "CoopQuad")
        QRKL B 0 A_FireCustomMissile("QuakeRocketQuad")
        goto Fire2
        
      CoopQuad:
        QRKL B 0 A_FireCustomMissile("QuakeRocketCoopQuad")
        goto Fire2
        
      AfterSound:
        QRKL A 0 A_JumpIfInventory("CoopModeOn", 1, "CoopFire")
        QRKL A 0 A_JumpIfInventory("SPModeOn", 1, "CoopFire")
        QRKL B 0 A_FireCustomMissile("QuakeRocket")
        goto Fire2
        
      CoopFire:
        QRKL B 0 A_FireCustomMissile("QuakeRocketCoop")
        goto Fire2
        
      Fire2:
        QRKL A 0 A_TakeInventory("UsingMultiRockets")
        QRKL A 0 A_TakeInventory("UsingDoEAmmo")
        QRKL BC 2 bright
        QRKL D 3 bright
        QRKL E 4
        QRKL FG 5
        QRKL H 6
        // 27 tics
        QRKL H 0 A_Refire
        goto Ready
        
      MultiFire:
        TNT1 A 0 A_JumpIfInventory("MultiRocketAmmo",1,"MultiFire2")
        goto Swap2
      MultiFire2:
        TNT1 A 0 ACS_ExecuteAlways(312, 0, 7, 4, 15)
        TNT1 A 0 A_JumpIfInventory("QuakeInvisTimer", 1, 2)
        TNT1 A 0 A_AlertMonsters
        QMRL B 0 A_PlaySound("quakeweps/rlfire", CHAN_WEAPON)
        TNT1 A 0 A_TakeInventory("MultiRocketAmmo",1)
        TNT1 A 0 A_JumpIfInventory("QuadDamagePower", 1, "QuadAlt")
        goto AfterSoundAlt
        
      QuadAlt:
        TNT1 A 0 A_PlaySound("quakeweps/quadfire", 7)
        TNT1 A 0 A_JumpIfInventory("CoopModeOn", 1, "CoopQuadAlt")
        TNT1 A 0 A_JumpIfInventory("SPModeOn", 1, "CoopQuadAlt")
        QMRL B 0 A_FireCustomMissile("QuakeClusterRocket", -4, 0)
        QMRL B 0 A_FireCustomMissile("QuakeClusterRocket", -2, 0)
        QMRL B 0 A_FireCustomMissile("QuakeClusterRocket",  2, 0)
        QMRL B 0 A_FireCustomMissile("QuakeClusterRocket",  4, 0)
        goto AltFire2
        
      CoopQuadAlt:
        QMRL B 0 A_FireCustomMissile("QuadClusterRkCoop", -4, 0)
        QMRL B 0 A_FireCustomMissile("QuadClusterRkCoop", -2, 0)
        QMRL B 0 A_FireCustomMissile("QuadClusterRkCoop",  2, 0)
        QMRL B 0 A_FireCustomMissile("QuadClusterRkCoop",  4, 0)
        goto AltFire2
        
      AfterSoundAlt:
        QMRL A 0 A_JumpIfInventory("CoopModeOn", 1, "CoopAlt")
        QMRL A 0 A_JumpIfInventory("SPModeOn", 1, "CoopAlt")
        QMRL B 0 A_FireCustomMissile("QuakeClusterRocket", -4, 0)
        QMRL B 0 A_FireCustomMissile("QuakeClusterRocket", -2, 0)
        QMRL B 0 A_FireCustomMissile("QuakeClusterRocket",  2, 0)
        QMRL B 0 A_FireCustomMissile("QuakeClusterRocket",  4, 0)
        goto AltFire2
        
      CoopAlt:
        QMRL B 0 A_FireCustomMissile("QuakeClusterRkCoop", -4, 0)
        QMRL B 0 A_FireCustomMissile("QuakeClusterRkCoop", -2, 0)
        QMRL B 0 A_FireCustomMissile("QuakeClusterRkCoop",  2, 0)
        QMRL B 0 A_FireCustomMissile("QuakeClusterRkCoop",  4, 0)
        goto AltFire2
        
      AltFire2:
        QRKL A 0 A_GiveInventory("UsingMultiRockets")
        QRKL A 0 A_GiveInventory("UsingDoEAmmo")
        QMRL B 4 bright
        QMRL D 2 bright
        QMRL E 4
        QMRL F 5
        QMRL G 5
        QMRL H 6
        // 27 tics
        QMRL H 0 A_Refire
        goto MultiReady
        
      AltFire:
        TNT1 A 0 A_JumpIfInventory("UsingMultiRockets",1,"Swap2")
        TNT1 A 0 A_PlaySound("quakeweps/doeammochange")
        TNT1 A 0 A_GiveInventory("UsingMultiRockets",1)
        TNT1 A 0 A_GiveInventory("UsingDoEAmmo",1)
        QMRL A 5 A_WeaponReady(12)
        TNT1 A 0 A_GiveInventory("UsingMultiRockets",1)
        QMRL A 10 A_WeaponReady(8)
        goto MultiReady
        
      Swap2:
        TNT1 A 0 A_PlaySound("quakeweps/doeammochange")
        TNT1 A 0 A_TakeInventory("UsingMultiRockets",1)
        TNT1 A 0 A_TakeInventory("UsingDoEAmmo",1)
        QRKL A 5 A_WeaponReady(12)
        TNT1 A 0 A_TakeInventory("UsingMultiRockets",1)
        QRKL A 10 A_WeaponReady(8)
        goto Ready
        
      Spawn:
        QRKL Z -1
        Stop

      DeselectShit:
        QRKL A 1
        TNT1 A 0 A_JumpIfInventory("Thunderbolt",1,"ConsiderTB")
      Consider6:
        //TNT1 A 0 A_JumpIfInventory("GotWeapon5",1,"ConsiderQRL")
      Consider5:
        TNT1 A 0 A_JumpIfInventory("GotWeapon3",1,"ConsiderQGL")
      Consider4:
        TNT1 A 0 A_JumpIfInventory("GotWeapon6",1,"ConsiderSNG")
      Consider3:
        TNT1 A 0 A_JumpIfInventory("GotWeapon4",1,"ConsiderNG")
      Consider2:
        TNT1 A 0 A_JumpIfInventory("GotWeapon2",1,"ConsiderDSG")
      Consider1:
        TNT1 A 0 A_JumpIfInventory("GotWeapon0",1,"ConsiderLasCan")
      Consider0:
        QRKL A 1 A_SelectWeapon("Single Shotgun")
        TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_Lower
        TNT1 A 1 A_Lower
        goto Deselect
        
      ConsiderTB:
        TNT1 A 0 A_JumpIfInventory("Cell",1,"SelectTB")
        goto Consider6
      ConsiderQRL:
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,"SelectQRL")
        goto Consider5
      ConsiderQGL:
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,"SelectQGL")
        goto Consider4
      ConsiderSNG:
        TNT1 A 0 A_JumpIfInventory("Clip",1,"SelectSNG")
        goto Consider3
      ConsiderNG:
        TNT1 A 0 A_JumpIfInventory("Clip",1,"SelectNG")
        goto Consider2
      ConsiderDSG:
        TNT1 A 0 A_JumpIfInventory("Shell",1,"SelectDSG")
        goto Consider1
      ConsiderLasCan:
        TNT1 A 0 A_JumpIfInventory("Cell",1,"SelectLasCan")
        goto Consider0

      SelectTB:
        TNT1 A 0 A_SelectWeapon("Thunderbolt")
        TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_Lower
        TNT1 A 1 A_Lower
        goto Deselect
      /*SelectQRL:
        TNT1 A 0 A_SelectWeapon("  Rocket Launcher  ")
        TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_Lower
        TNT1 A 1 A_Lower
        goto Deselect*/
      SelectQGL:
        TNT1 A 0 A_SelectWeapon("Grenade Launcher")
        TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_Lower
        TNT1 A 1 A_Lower
        goto Deselect
      SelectSNG:
        TNT1 A 0 A_SelectWeapon("Super Nailgun")
        TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_Lower
        TNT1 A 1 A_Lower
        goto Deselect
      SelectNG:
        TNT1 A 0 A_SelectWeapon("Nailgun")
        TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_Lower
        TNT1 A 1 A_Lower
        goto Deselect
      SelectDSG:
        TNT1 A 0 A_SelectWeapon("Double Shotgun")
        TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_Lower
        TNT1 A 1 A_Lower
        goto Deselect
      SelectLasCan:
        TNT1 A 0 A_SelectWeapon("Laser Cannon")
        TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_Lower
        TNT1 A 1 A_Lower
        goto Deselect
    }
}

actor "Spectral RL": "  Rocket Launcher  "
{
    Weapon.AmmoType ""
    Weapon.AmmoUse  0
    Weapon.AmmoGive 0

    Weapon.AmmoType2 ""
    Weapon.AmmoUse2  0
    Weapon.AmmoGive2 0

    Weapon.SisterWeapon "  Rocket Launcher  "
    +POWERED_UP

    States
    {
      Fire:
        TNT1 A 0 A_JumpIfInventory("QuakeInvisTimer", 1, 2)
        TNT1 A 0 A_AlertMonsters
        TNT1 A 0 A_JumpIfInventory("UsingMultiRockets",1,"MultiFire")
        TNT1 A 0 A_JumpIfNoAmmo("DeselectShit")
        TNT1 A 0 ACS_ExecuteAlways(312, 0, 5, 4, 15)
        TNT1 A 0 ACS_ExecuteAlways(317, 0, 20)
        QRKL B 0 A_PlaySound("quakeweps/rlfire", CHAN_WEAPON)
        TNT1 A 0 A_PlaySound("weapons/sigil", 6)
        QRKL B 0 A_FireCustomMissile("SpectralRocket")
        goto Fire2
        
      MultiFire:
        TNT1 A 0 A_JumpIfInventory("MultiRocketAmmo", 1, 1)
        goto Swap2
        TNT1 A 0 ACS_ExecuteAlways(312, 0, 7, 4, 15)
        TNT1 A 0 ACS_ExecuteAlways(317, 0, 35)

        QMRL B 0 A_PlaySound("quakeweps/rlfire", CHAN_WEAPON)
        TNT1 A 0 A_PlaySound("weapons/sigil", 6)

        QMRL B 0 A_FireCustomMissile("SpectralClusterRocket", -4, 0)
        QMRL B 0 A_FireCustomMissile("SpectralClusterRocket", -2, 0)
        QMRL B 0 A_FireCustomMissile("SpectralClusterRocket",  2, 0)
        QMRL B 0 A_FireCustomMissile("SpectralClusterRocket",  4)
        goto AltFire2
    }
}

actor UsingMultiRockets : Boolean {}

actor QuakeRocket
{
    Radius 2
    Height 2
    Speed 50
    DamageType "Explosive"
    Scale 0.3
    
    Projectile
    
    +RANDOMIZE
    +DEHEXPLOSION
    +ROCKETTRAIL
    +EXPLODEONWATER
    
    Obituary "%k \csmade\c- %o \csride the rocket.\c-" // Might need to change, exact same as Doomguy's.
    
    States
    {
      Spawn:
        QRKT A -1
        loop
        
      Death:
        DMSL B 0 A_Explode(64, 128, 0)
        DMSL B 0 A_Explode(64, 128)
        TNT1 A 1 A_SpawnItemEx("QuakeExplosion")
        stop
    }
}

actor QuakeRocketQuad: QuakeRocket
{
    Obituary "%k \cssmeared\c- %o \cswith a Quadded Rocket."
    
    DamageType "NotQuadded"
    
    States
    {
      Death:
        DMSL B 0 A_Explode(256, 128, 0)
        DMSL B 0 A_Explode(256, 128)
        TNT1 A 1 A_SpawnItemEx("QuakeExplosion")
        stop
    }
}

actor QuakeRocketCoop: QuakeRocket
{
    +THRUSPECIES
    Species "Player"
	Damage (20)
}

actor QuakeRocketCoopQuad: QuakeRocketQuad
{
    +THRUSPECIES
    Species "Player"
	Damage (80)
}

actor QuakeClusterRocket: QuakeRocket
{
    Obituary "%k \csgave\c- %o \csfour rockets to ride.\c-"
    
    States
    {
      Death:
        DMSL B 0 A_Explode(24, 91, 0)
        DMSL B 0 A_Explode(24, 91)
        TNT1 A 1 A_SpawnItemEx("QuakeTinyExplosion")
        stop
    }
}

actor QuakeClusterRkCoop: QuakeClusterRocket
{
    +THRUSPECIES
    Species "Player"
    
    Damage (5)
}

actor QuadClusterRocket: QuakeClusterRocket
{
    DamageType "NotQuadded"
    Obituary "%k \csturned\c- %o \csinto a fine mist.\c-"
    
    States
    {
      Death:
        DMSL B 0 A_Explode(96, 91, 0)
        DMSL B 0 A_Explode(96, 91)
        TNT1 A 1 A_SpawnItemEx("QuakeTinyExplosion")
        stop
    }
}

actor QuadClusterRkCoop: QuadClusterRocket
{
    +THRUSPECIES
    Species "Player"
	Damage (20)
}

actor SpectralRocket: QuakeRocketCoopQuad { DamageType "SpectralNoQuad" }
actor SpectralClusterRocket: QuadClusterRkCoop { DamageType "SpectralNoQuad" }
